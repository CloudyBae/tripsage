AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: TripSage AWS resources

Parameters:
  ResourceEnv:
    Description: 'Environment which the resources will be deployed to'
    Type: 'String'
    AllowedValues:
      - 'dev'
      - 'prod'

  ServiceEnv:
    Description: 'Name of the service environment'
    Type: 'String'

  LogLevel:
    Description: "Log level for functions"
    Type: String
    Default: 'INFO'
    AllowedValues:
      - 'DEBUG'
      - 'INFO'
      - 'WARNING'
      - 'ERROR'
      - 'CRITICAL'

Conditions:
  IsProdDeployment: !Equals [!Ref ServiceEnv, 'prod']

Globals:
  Function:
    Runtime: python3.10
    Timeout: 180
    Environment:
      Variables:
        ResourceEnv: !Ref ResourceEnv
        ServiceEnv: !Ref ServiceEnv

Resources:
  CommonLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
      ContentUri: src/common
      RetentionPolicy: Delete
      CompatibleRuntimes: 
        - python3.10
    Metadata:
      BuildMethod: python3.10
 
  CreateFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to create an item in DynamoDB table'
    Properties:
      FunctionName: CreateItemFunction
      Handler: handler
      CodeUri: src/handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        CreateApiEvent:
          Type: Api
          Properties:
            Path: /create
            Method: POST

  ReadFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to read an item from DynamoDB table'
    Properties:
      FunctionName: ReadItemFunction
      Handler: handler
      CodeUri: src/handler
      Policies:
        DynamoDBReadPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        ReadApiEvent:
          Type: Api
          Properties:
            Path: /read/{id}
            Method: GET

  UpdateFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to update an item in DynamoDB table'
    Properties:
      FunctionName: UpdateItemFunction
      Handler: handler
      CodeUri: src/handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        UpdateApiEvent:
          Type: Api
          Properties:
            Path: /update/{id}
            Method: PUT

  DeleteFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda function to delete an item from DynamoDB table'
    Properties:
      FunctionName: DeleteItemFunction
      Handler: handler
      CodeUri: src/handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      Events:
        DeleteApiEvent:
          Type: Api
          Properties:
            Path: /delete/{id}
            Method: DELETE

###############
#  S3 BUCKET  #
###############

  TripSageBucket:
    Type: AWS::S3::Bucket
    Condition: IsProdDeployment
    Properties:
      BucketName: !Sub tripsage-bucket-${ServiceEnv}

####################
#  DYNAMODB TABLE  #
####################

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TripSage-${ResourceEnv}
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1_PK
          AttributeType: S
        - AttributeName: GSI1_SK
          AttributeType: S
        - AttributeName: GSI2_PK
          AttributeType: S
        - AttributeName: GSI2_SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1_PK
              KeyType: HASH
            - AttributeName: GSI1_SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: GSI2
          KeySchema:
            - AttributeName: GSI2_PK
              KeyType: HASH
            - AttributeName: GSI2_SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

#############
#  OUTPUTS  #
#############

Outputs:
  EndpointUrl:
    Description: 'HTTP REST endpoint URL'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${DeploymentEnv}'